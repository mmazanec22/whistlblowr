%div.row
  %div.single-complaint.complaint-container.col.s12.z-depth-2

    - if flash[:notice] && !@investigator_authenticated
      %div.new-complaint-notice.row.col.s12
        %p.complaint-key="Secret Complaint Key: #{flash[:notice]}"
        %p Save this key! You can revisit this page by providing this value on the submission page:
        =image_tag("retrieve-complaint.png", class: "retrieve-complaint")
        %p If you have not provided contact information, the Project Six team may try to communicate with you using the anonymous messaging below.

    %div.row
      %div.col.s12
        %h5 Details of Complaint:
        =@complaint.content
    -if @complaint.allegation_types
      %div.row
        %div.col.s12
          %h5 Allegations:
          = @complaint.allegation_types_as_nice_string
    -if @complaint.media.length > 0
      %div.row
        %div.col.s12
          %h5 Files:
          -@complaint.media.each do |url|
            %a{ :href => url, :title => "View attachment" }
              =File.basename(url.to_s)
            %br
    %div.row
      %div.col.s12
        %div
          %span{ :style => "font-weight: bold;" }Created:
          %span=@complaint.created_at.strftime("%Y/%m/%d")
        %div
          %span{ :style => "font-weight: bold;" }Contact Info:
          %span=@complaint.user.to_s
- if @investigator_authenticated
  %a.waves-effect.waves-light.btn{ href: complaints_path } Back

%br
%br

%div.row
  %div.complaint-container.col.s12.z-depth-2
    %h5 Create a new Message:
    = form_for(@message, remote: true) do |f|
      %div.row
        = f.hidden_field(:complaint_id, :value => @complaint.id)
        %div.input-field.col.s12
          = f.text_area :text, class: "materialize-textarea flow-text message-body", placeholder: "Message", id: "textarea1"
      %div.row
        %div.input-field.file-field.col.s12
          = f.submit "Send", class: "btn", :id=>"send-message"
    -if @complaint.messages.length>0
      %h5 Messages:
    %div#message-container
      - @complaint.messages.each do |message|
        =render partial: "messages/show", locals: {message: message}
